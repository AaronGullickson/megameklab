//
// Setup Gradle Build Scans for this Project
// with a special hook to place the Build Scan URI
// onto a GitHub Actions job step output variable
// called `buildScanUri`.
//
import com.gradle.enterprise.gradleplugin.GradleEnterprisePlugin
import com.gradle.scan.plugin.BuildScanPlugin
import com.gradle.scan.plugin.PublishedBuildScan
import org.gradle.util.GradleVersion

initscript {
    def pluginVersion = "3.2"

    repositories {
        gradlePluginPortal()
    }
    dependencies {
        classpath("com.gradle:gradle-enterprise-gradle-plugin:${pluginVersion}")
    }
}

def isTopLevelBuild = gradle.getParent() == null

if (isTopLevelBuild) {
    settingsEvaluated {
        if (!it.pluginManager.hasPlugin("com.gradle.enterprise")) {
            it.pluginManager.apply(GradleEnterprisePlugin)
        }
        configureExtension(it.extensions["gradleEnterprise"])
    }
}

void configureExtension(extension) {
    extension.buildScan.with {
        termsOfServiceUrl = "https://gradle.com/terms-of-service"
        termsOfServiceAgree = "yes"

        buildScanPublished { PublishedBuildScan scan ->
            echo "name=buildScanUri::${scan.buildScanUri}\n" >> $GITHUB_OUTPUT
        }
    }
}
